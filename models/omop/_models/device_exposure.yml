models:
  - name: device_exposure
    description: The Device domain captures information about a person's exposure to a foreign physical
      object or instrument which is used for diagnostic or therapeutic purposes through a mechanism beyond
      chemical action. Devices include implantable objects (e.g. pacemakers, stents, artificial joints),
      medical equipment and supplies (e.g. bandages, crutches, syringes), other instruments used in medical
      procedures (e.g. sutures, defibrillators) and material used in clinical care (e.g. adhesives, body
      material, dental material, surgical material).
    tests:
      - person_completeness:
          threshold: '100'
    columns:
      - name: device_exposure_id
        description: The unique key given to records a person's exposure to a foreign physical object
          or instrument.
        data_type: integer
        tests:
          - not_null
          - unique
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list: "{{ get_type_variants(['bigint', 'integer']) }}"
      - name: person_id
        description: ''
        data_type: integer
        tests:
          - not_null
          - relationships:
              to: ref('person')
              field: person_id
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list: "{{ get_type_variants(['bigint', 'integer']) }}"
      - name: device_concept_id
        description: The DEVICE_CONCEPT_ID field is recommended for primary use in analyses, and must
          be used for network studies. This is the standard concept mapped from the source concept id
          which represents a foreign object or instrument the person was exposed to.
        data_type: integer
        tests:
          - not_null
          - dbt_utils.relationships_where:
              to: ref('concept')
              field: concept_id
              from_condition: device_concept_id <> 0
              to_condition: domain_id = 'Device'
          - concept_record_completeness:
              threshold: '5'
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list: "{{ get_type_variants(['bigint', 'integer']) }}"
          - dbt_utils.relationships_where:
              to: ref('concept')
              field: concept_id
              from_condition: device_concept_id != 0
              to_condition: standard_concept = 'S' AND invalid_reason IS NULL
      - name: device_exposure_start_date
        description: Use this date to determine the start date of the device record.
        data_type: date
        tests:
          - not_null
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list: "{{ get_equivalent_types('date') }}"
      - name: device_exposure_start_datetime
        description: ''
        data_type: datetime
        tests:
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list: "{{ get_equivalent_types('timestamp') }}"
      - name: device_exposure_end_date
        description: The DEVICE_EXPOSURE_END_DATE denotes the day the device exposure ended for the patient,
          if given.
        data_type: date
        tests:
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list: "{{ get_equivalent_types('date') }}"
      - name: device_exposure_end_datetime
        description: ''
        data_type: datetime
        tests:
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list: "{{ get_equivalent_types('timestamp') }}"
      - name: device_type_concept_id
        description: You can use the TYPE_CONCEPT_ID to denote the provenance of the record, as in whether
          the record is from administrative claims or EHR.
        data_type: integer
        tests:
          - not_null
          - dbt_utils.relationships_where:
              to: ref('concept')
              field: concept_id
              from_condition: device_type_concept_id <> 0
              to_condition: domain_id = 'Type Concept'
          - concept_record_completeness:
              threshold: '0'
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list: "{{ get_type_variants(['bigint', 'integer']) }}"
          - dbt_utils.relationships_where:
              to: ref('concept')
              field: concept_id
              from_condition: device_type_concept_id != 0
              to_condition: standard_concept = 'S' AND invalid_reason IS NULL
      - name: unique_device_id
        description: This is the Unique Device Identification (UDI-DI) number for devices regulated by
          the FDA, if given.
        data_type: varchar(255)
        tests:
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list: "{{ get_equivalent_types('varchar') }}"
      - name: production_id
        description: This is the Production Identifier (UDI-PI) portion of the Unique Device Identification.
        data_type: varchar(255)
        tests:
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list: "{{ get_equivalent_types('varchar') }}"
      - name: quantity
        description: ''
        data_type: integer
        tests:
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list: "{{ get_type_variants(['bigint', 'integer']) }}"
      - name: provider_id
        description: The Provider associated with device record, e.g. the provider who wrote the prescription
          or the provider who implanted the device.
        data_type: integer
        tests:
          - relationships:
              to: ref('provider')
              field: provider_id
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list: "{{ get_type_variants(['bigint', 'integer']) }}"
      - name: visit_occurrence_id
        description: The Visit during which the device was prescribed or given.
        data_type: integer
        tests:
          - relationships:
              to: ref('visit_occurrence')
              field: visit_occurrence_id
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list: "{{ get_type_variants(['bigint', 'integer']) }}"
      - name: visit_detail_id
        description: The Visit Detail during which the device was prescribed or given.
        data_type: integer
        tests:
          - relationships:
              to: ref('visit_detail')
              field: visit_detail_id
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list: "{{ get_type_variants(['bigint', 'integer']) }}"
      - name: device_source_value
        description: This field houses the verbatim value from the source data representing the device
          exposure that occurred. For example, this could be an NDC or Gemscript code.
        data_type: varchar(50)
        tests:
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list: "{{ get_equivalent_types('varchar') }}"
      - name: device_source_concept_id
        description: This is the concept representing the device source value and may not necessarily
          be standard. This field is discouraged from use in analysis because it is not required to contain
          Standard Concepts that are used across the OHDSI community, and should only be used when Standard
          Concepts do not adequately represent the source detail for the Device necessary for a given
          analytic use case. Consider using DEVICE_CONCEPT_ID instead to enable standardized analytics
          that can be consistent across the network.
        data_type: integer
        tests:
          - relationships:
              to: ref('concept')
              field: concept_id
          - concept_record_completeness:
              threshold: '10'
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list: "{{ get_type_variants(['bigint', 'integer']) }}"
      - name: unit_concept_id
        description: UNIT_SOURCE_VALUES should be mapped to a Standard Concept in the Unit domain that
          best represents the unit as given in the source data.
        data_type: integer
        tests:
          - dbt_utils.relationships_where:
              to: ref('concept')
              field: concept_id
              from_condition: unit_concept_id <> 0
              to_condition: domain_id = 'Unit'
          - concept_record_completeness:
              threshold: '5'
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list: "{{ get_type_variants(['bigint', 'integer']) }}"
          - dbt_utils.relationships_where:
              to: ref('concept')
              field: concept_id
              from_condition: unit_concept_id != 0
              to_condition: standard_concept = 'S' AND invalid_reason IS NULL
      - name: unit_source_value
        description: This field houses the verbatim value from the source data representing the unit of
          the Device. For example, blood transfusions are considered devices and can be given in mL quantities.
        data_type: varchar(50)
        tests:
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list: "{{ get_equivalent_types('varchar') }}"
      - name: unit_source_concept_id
        description: This is the concept representing the UNIT_SOURCE_VALUE and may not necessarily be
          standard. This field is discouraged from use in analysis because it is not required to contain
          Standard Concepts that are used across the OHDSI community, and should only be used when Standard
          Concepts do not adequately represent the source detail for the Unit necessary for a given analytic
          use case. Consider using UNIT_CONCEPT_ID instead to enable standardized analytics that can be
          consistent across the network.
        data_type: integer
        tests:
          - relationships:
              to: ref('concept')
              field: concept_id
          - concept_record_completeness:
              threshold: '100'
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list: "{{ get_type_variants(['bigint', 'integer']) }}"
