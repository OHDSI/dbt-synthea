models:
  - name: device_exposure
    description: The Device domain captures information about a person’s exposure to a foreign physical
      object or instrument which is used for diagnostic or therapeutic purposes through a mechanism beyond
      chemical action. Devices include implantable objects (e.g. pacemakers, stents, artificial joints),
      medical equipment and supplies (e.g. bandages, crutches, syringes), other instruments used in medical
      procedures (e.g. sutures, defibrillators) and material used in clinical care (e.g. adhesives, body
      material, dental material, surgical material).
    columns:
      - name: device_exposure_id
        description: The unique key given to records a person’s exposure to a foreignphysical object or
          instrument.
        data_type: integer
        tests:
          - not_null
          - unique
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list: ["{{ api.Column.translate_type('integer') }}", "{{ api.Column.translate_type('bigint')
                    }}"]
      - name: person_id
        description: ''
        data_type: integer
        tests:
          - not_null
          - relationships:
              to: ref('person')
              field: person_id
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list: ["{{ api.Column.translate_type('integer') }}", "{{ api.Column.translate_type('bigint')
                    }}"]
      - name: device_concept_id
        description: The DEVICE_CONCEPT_ID field is recommended for primary use in analyses,and must be
          used for network studies. This is the standard conceptmapped from the source concept id which
          represents a foreign object orinstrument the person was exposed to.
        data_type: integer
        tests:
          - not_null
          - dbt_utils.relationships_where:
              to: ref('concept')
              field: concept_id
              from_condition: device_concept_id <> 0
              to_condition: domain_id = 'Device'
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list: ["{{ api.Column.translate_type('integer') }}", "{{ api.Column.translate_type('bigint')
                    }}"]
      - name: device_exposure_start_date
        description: Use this date to determine the start date of the device record.
        data_type: date
        tests:
          - not_null
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: "{{ api.Column.translate_type('date') }}"
      - name: device_exposure_start_datetime
        description: ''
        data_type: datetime
        tests:
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: "{{ api.Column.translate_type('timestamp') }}"
      - name: device_exposure_end_date
        description: The DEVICE_EXPOSURE_END_DATE denotes the day the device exposure endedfor the patient,
          if given.
        data_type: date
        tests:
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: "{{ api.Column.translate_type('date') }}"
      - name: device_exposure_end_datetime
        description: ''
        data_type: datetime
        tests:
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: "{{ api.Column.translate_type('timestamp') }}"
      - name: device_type_concept_id
        description: You can use the TYPE_CONCEPT_ID to denote the provenance of the record,as in whether
          the record is from administrative claims or EHR.
        data_type: integer
        tests:
          - not_null
          - dbt_utils.relationships_where:
              to: ref('concept')
              field: concept_id
              from_condition: device_type_concept_id <> 0
              to_condition: domain_id = 'Type Concept'
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list: ["{{ api.Column.translate_type('integer') }}", "{{ api.Column.translate_type('bigint')
                    }}"]
      - name: unique_device_id
        description: This is the Unique Device Identification (UDI-DI) number for devicesregulated by
          the FDA, if given.
        data_type: varchar(255)
        tests:
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: "{{ api.Column.translate_type('varchar') }}"
      - name: production_id
        description: This is the Production Identifier (UDI-PI) portion of the Unique DeviceIdentification.
        data_type: varchar(255)
        tests:
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: "{{ api.Column.translate_type('varchar') }}"
      - name: quantity
        description: ''
        data_type: integer
        tests:
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list: ["{{ api.Column.translate_type('integer') }}", "{{ api.Column.translate_type('bigint')
                    }}"]
      - name: provider_id
        description: The Provider associated with device record, e.g. the provider who wrotethe prescription
          or the provider who implanted the device.
        data_type: integer
        tests:
          - relationships:
              to: ref('provider')
              field: provider_id
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list: ["{{ api.Column.translate_type('integer') }}", "{{ api.Column.translate_type('bigint')
                    }}"]
      - name: visit_occurrence_id
        description: The Visit during which the device was prescribed or given.
        data_type: integer
        tests:
          - relationships:
              to: ref('visit_occurrence')
              field: visit_occurrence_id
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list: ["{{ api.Column.translate_type('integer') }}", "{{ api.Column.translate_type('bigint')
                    }}"]
      - name: visit_detail_id
        description: The Visit Detail during which the device was prescribed or given.
        data_type: integer
        tests:
          - relationships:
              to: ref('visit_detail')
              field: visit_detail_id
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list: ["{{ api.Column.translate_type('integer') }}", "{{ api.Column.translate_type('bigint')
                    }}"]
      - name: device_source_value
        description: This field houses the verbatim value from the source data representingthe device
          exposure that occurred. For example, this could be an NDC orGemscript code.
        data_type: varchar(50)
        tests:
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: "{{ api.Column.translate_type('varchar') }}"
      - name: device_source_concept_id
        description: This is the concept representing the device source value and may notnecessarily be
          standard. This field is discouraged from use in analysisbecause it is not required to contain
          Standard Concepts that are usedacross the OHDSI community, and should only be used when StandardConcepts
          do not adequately represent the source detail for the Devicenecessary for a given analytic use
          case. Consider usingDEVICE_CONCEPT_ID instead to enable standardized analytics that can beconsistent
          across the network.
        data_type: integer
        tests:
          - relationships:
              to: ref('concept')
              field: concept_id
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list: ["{{ api.Column.translate_type('integer') }}", "{{ api.Column.translate_type('bigint')
                    }}"]
      - name: unit_concept_id
        description: UNIT_SOURCE_VALUES should be mapped to a Standard Concept in the Unitdomain that
          best represents the unit as given in the source data.
        data_type: integer
        tests:
          - dbt_utils.relationships_where:
              to: ref('concept')
              field: concept_id
              from_condition: unit_concept_id <> 0
              to_condition: domain_id = 'Unit'
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list: ["{{ api.Column.translate_type('integer') }}", "{{ api.Column.translate_type('bigint')
                    }}"]
      - name: unit_source_value
        description: This field houses the verbatim value from the source data representingthe unit of
          the Device. For example, blood transfusions are considereddevices and can be given in mL quantities.
        data_type: varchar(50)
        tests:
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: "{{ api.Column.translate_type('varchar') }}"
      - name: unit_source_concept_id
        description: This is the concept representing the UNIT_SOURCE_VALUE and may notnecessarily be
          standard. This field is discouraged from use in analysisbecause it is not required to contain
          Standard Concepts that are usedacross the OHDSI community, and should only be used when StandardConcepts
          do not adequately represent the source detail for the Unitnecessary for a given analytic use
          case. Consider using UNIT_CONCEPT_IDinstead to enable standardized analytics that can be consistent
          acrossthe network.
        data_type: integer
        tests:
          - relationships:
              to: ref('concept')
              field: concept_id
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list: ["{{ api.Column.translate_type('integer') }}", "{{ api.Column.translate_type('bigint')
                    }}"]
