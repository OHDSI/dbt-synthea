models:
  - name: drug_strength
    description: The DRUG_STRENGTH table contains structured content about the amount or concentration
      and associated units of a specific ingredient contained within a particular drug product. This table
      is supplemental information to support standardized analysis of drug utilization.
    columns:
      - name: drug_concept_id
        description: The Concept representing the Branded Drug or Clinical Drug Product.
        data_type: integer
        tests:
          - not_null
          - relationships:
              to: ref('concept')
              field: concept_id
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list: "{{ get_type_variants(['bigint', 'integer']) }}"
          - dbt_utils.relationships_where:
              to: ref('concept')
              field: concept_id
              from_condition: drug_concept_id != 0
              to_condition: standard_concept = 'S' AND invalid_reason IS NULL
      - name: ingredient_concept_id
        description: The Concept representing the active ingredient contained within the drug product.
        data_type: integer
        tests:
          - not_null
          - dbt_utils.relationships_where:
              to: ref('concept')
              field: concept_id
              from_condition: ingredient_concept_id <> 0
              to_condition: concept_class_id = 'Ingredient'
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list: "{{ get_type_variants(['bigint', 'integer']) }}"
          - dbt_utils.relationships_where:
              to: ref('concept')
              field: concept_id
              from_condition: ingredient_concept_id != 0
              to_condition: standard_concept = 'S' AND invalid_reason IS NULL
      - name: amount_value
        description: The numeric value or the amount of active ingredient contained within the drug product.
        data_type: float
        tests:
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list: "{{ get_equivalent_types('float') }}"
      - name: amount_unit_concept_id
        description: The Concept representing the Unit of measure for the amount of active ingredient
          contained within the drug product.
        data_type: integer
        tests:
          - relationships:
              to: ref('concept')
              field: concept_id
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list: "{{ get_type_variants(['bigint', 'integer']) }}"
          - dbt_utils.relationships_where:
              to: ref('concept')
              field: concept_id
              from_condition: amount_unit_concept_id != 0
              to_condition: standard_concept = 'S' AND invalid_reason IS NULL
      - name: numerator_value
        description: The concentration of the active ingredient contained within the drug product.
        data_type: float
        tests:
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list: "{{ get_equivalent_types('float') }}"
      - name: numerator_unit_concept_id
        description: The Concept representing the Unit of measure for the concentration of active ingredient.
        data_type: integer
        tests:
          - relationships:
              to: ref('concept')
              field: concept_id
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list: "{{ get_type_variants(['bigint', 'integer']) }}"
          - dbt_utils.relationships_where:
              to: ref('concept')
              field: concept_id
              from_condition: numerator_unit_concept_id != 0
              to_condition: standard_concept = 'S' AND invalid_reason IS NULL
      - name: denominator_value
        description: The amount of total liquid (or other divisible product, such as ointment, gel, spray,
          etc.).
        data_type: float
        tests:
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list: "{{ get_equivalent_types('float') }}"
      - name: denominator_unit_concept_id
        description: The Concept representing the denominator unit for the concentration of active ingredient.
        data_type: integer
        tests:
          - relationships:
              to: ref('concept')
              field: concept_id
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list: "{{ get_type_variants(['bigint', 'integer']) }}"
          - dbt_utils.relationships_where:
              to: ref('concept')
              field: concept_id
              from_condition: denominator_unit_concept_id != 0
              to_condition: standard_concept = 'S' AND invalid_reason IS NULL
      - name: box_size
        description: The number of units of Clinical Branded Drug or Quantified Clinical or Branded Drug
          contained in a box as dispensed to the patient.
        data_type: integer
        tests:
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list: "{{ get_type_variants(['bigint', 'integer']) }}"
      - name: valid_start_date
        description: The date when the Concept was first recorded. The default value is 1-Jan-1970.
        data_type: date
        tests:
          - not_null
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list: "{{ get_equivalent_types('date') }}"
      - name: valid_end_date
        description: The date when then Concept became invalid.
        data_type: date
        tests:
          - not_null
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list: "{{ get_equivalent_types('date') }}"
      - name: invalid_reason
        description: Reason the concept was invalidated. Possible values are D (deleted), U (replaced
          with an update) or NULL when valid_end_date has the default value.
        data_type: varchar(1)
        tests:
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list: "{{ get_equivalent_types('varchar') }}"
          - dbt_expectations.expect_column_value_lengths_to_be_between:
              max_value: 1
              row_condition: invalid_reason is not null
              strictly: false
