models:
  - name: procedure_occurrence
    description: This table contains records of activities or processes ordered by, or carried out by,
      a healthcare provider on the patient with a diagnostic or therapeutic purpose.
    columns:
      - name: procedure_occurrence_id
        description: The unique key given to a procedure record for a person. Refer to theETL for how
          duplicate procedures during the same visit were handled.
        data_type: integer
        tests:
          - not_null
          - unique
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list: ["{{ api.Column.translate_type('integer') }}", "{{ api.Column.translate_type('bigint')
                    }}"]
      - name: person_id
        description: The PERSON_ID of the PERSON for whom the procedure is recorded. This maybe a system
          generated code.
        data_type: integer
        tests:
          - not_null
          - relationships:
              to: ref('person')
              field: person_id
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list: ["{{ api.Column.translate_type('integer') }}", "{{ api.Column.translate_type('bigint')
                    }}"]
      - name: procedure_concept_id
        description: The PROCEDURE_CONCEPT_ID field is recommended for primary use inanalyses, and must
          be used for network studies. This is the standardconcept mapped from the source value which
          represents a procedure
        data_type: integer
        tests:
          - not_null
          - dbt_utils.relationships_where:
              to: ref('concept')
              field: concept_id
              from_condition: procedure_concept_id <> 0
              to_condition: domain_id = 'Procedure'
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list: ["{{ api.Column.translate_type('integer') }}", "{{ api.Column.translate_type('bigint')
                    }}"]
      - name: procedure_date
        description: Use this date to determine the date the procedure started.
        data_type: date
        tests:
          - not_null
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: "{{ api.Column.translate_type('date') }}"
      - name: procedure_datetime
        description: ''
        data_type: datetime
        tests:
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: "{{ api.Column.translate_type('timestamp') }}"
      - name: procedure_end_date
        description: Use this field to house the date that the procedure ended.
        data_type: date
        tests:
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: "{{ api.Column.translate_type('date') }}"
      - name: procedure_end_datetime
        description: Use this field to house the datetime that the procedure ended.
        data_type: datetime
        tests:
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: "{{ api.Column.translate_type('timestamp') }}"
      - name: procedure_type_concept_id
        description: This field can be used to determine the provenance of the Procedurerecord, as in
          whether the procedure was from an EHR system, insuranceclaim, registry, or other sources.
        data_type: integer
        tests:
          - not_null
          - dbt_utils.relationships_where:
              to: ref('concept')
              field: concept_id
              from_condition: procedure_type_concept_id <> 0
              to_condition: domain_id = 'Type Concept'
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list: ["{{ api.Column.translate_type('integer') }}", "{{ api.Column.translate_type('bigint')
                    }}"]
      - name: modifier_concept_id
        description: The modifiers are intended to give additional information about theprocedure but
          as of now the vocabulary is under review.
        data_type: integer
        tests:
          - relationships:
              to: ref('concept')
              field: concept_id
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list: ["{{ api.Column.translate_type('integer') }}", "{{ api.Column.translate_type('bigint')
                    }}"]
      - name: quantity
        description: If the quantity value is omitted, a single procedure is assumed.
        data_type: integer
        tests:
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list: ["{{ api.Column.translate_type('integer') }}", "{{ api.Column.translate_type('bigint')
                    }}"]
      - name: provider_id
        description: The provider associated with the procedure record, e.g.Â the provider whoperformed
          the Procedure.
        data_type: integer
        tests:
          - relationships:
              to: ref('provider')
              field: provider_id
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list: ["{{ api.Column.translate_type('integer') }}", "{{ api.Column.translate_type('bigint')
                    }}"]
      - name: visit_occurrence_id
        description: The visit during which the procedure occurred.
        data_type: integer
        tests:
          - relationships:
              to: ref('visit_occurrence')
              field: visit_occurrence_id
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list: ["{{ api.Column.translate_type('integer') }}", "{{ api.Column.translate_type('bigint')
                    }}"]
      - name: visit_detail_id
        description: The VISIT_DETAIL record during which the Procedure occurred. Forexample, if the Person
          was in the ICU at the time of the Procedure theVISIT_OCCURRENCE record would reflect the overall
          hospital stay and theVISIT_DETAIL record would reflect the ICU stay during the hospitalvisit.
        data_type: integer
        tests:
          - relationships:
              to: ref('visit_detail')
              field: visit_detail_id
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list: ["{{ api.Column.translate_type('integer') }}", "{{ api.Column.translate_type('bigint')
                    }}"]
      - name: procedure_source_value
        description: This field houses the verbatim value from the source data representingthe procedure
          that occurred. For example, this could be an CPT4 or OPCS4code.
        data_type: varchar(50)
        tests:
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: "{{ api.Column.translate_type('varchar') }}"
      - name: procedure_source_concept_id
        description: This is the concept representing the procedure source value and may notnecessarily
          be standard. This field is discouraged from use in analysisbecause it is not required to contain
          Standard Concepts that are usedacross the OHDSI community, and should only be used when StandardConcepts
          do not adequately represent the source detail for the Procedurenecessary for a given analytic
          use case. Consider usingPROCEDURE_CONCEPT_ID instead to enable standardized analytics that canbe
          consistent across the network.
        data_type: integer
        tests:
          - relationships:
              to: ref('concept')
              field: concept_id
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list: ["{{ api.Column.translate_type('integer') }}", "{{ api.Column.translate_type('bigint')
                    }}"]
      - name: modifier_source_value
        description: This field houses the verbatim value from the source data representingthe modifier
          code for the procedure that occurred.
        data_type: varchar(50)
        tests:
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: "{{ api.Column.translate_type('varchar') }}"
