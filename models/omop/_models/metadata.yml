models:
  - name: metadata
    description: The METADATA table contains metadata information about a dataset that has been transformed
      to the OMOP Common Data Model.
    columns:
      - name: metadata_id
        description: The unique key given to a Metadata record.
        data_type: integer
        tests:
          - not_null
          - unique
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list: ["{{ api.Column.translate_type('integer') }}", "{{ api.Column.translate_type('bigint') }}"]
      - name: metadata_concept_id
        description: ''
        data_type: integer
        tests:
          - not_null
          - relationships:
              to: ref('concept')
              field: concept_id
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list: ["{{ api.Column.translate_type('integer') }}", "{{ api.Column.translate_type('bigint') }}"]
      - name: metadata_type_concept_id
        description: ''
        data_type: integer
        tests:
          - not_null
          - relationships:
              to: ref('concept')
              field: concept_id
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list: ["{{ api.Column.translate_type('integer') }}", "{{ api.Column.translate_type('bigint') }}"]
      - name: name
        description: ''
        data_type: varchar(250)
        tests:
          - not_null
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: "{{ api.Column.translate_type('varchar') }}"
      - name: value_as_string
        description: ''
        data_type: varchar(250)
        tests:
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: "{{ api.Column.translate_type('varchar') }}"
      - name: value_as_concept_id
        description: ''
        data_type: integer
        tests:
          - relationships:
              to: ref('concept')
              field: concept_id
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list: ["{{ api.Column.translate_type('integer') }}", "{{ api.Column.translate_type('bigint') }}"]
      - name: value_as_number
        description: This is the numerical value of the result of the Metadata, if applicableand available.
          It is not expected that all Metadata will have numericresults, rather, this field is here to
          house values should they exist.
        data_type: float
        tests:
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: "{{ api.Column.translate_type('float') }}"
      - name: metadata_date
        description: ''
        data_type: date
        tests:
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: "{{ api.Column.translate_type('date') }}"
      - name: metadata_datetime
        description: ''
        data_type: datetime
        tests:
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: "{{ api.Column.translate_type('timestamp') }}"
