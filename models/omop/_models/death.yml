models:
  - name: death
    description: 'The death domain contains the clinical event for how and when a Person dies. A person
      can have up to one record if the source system contains evidence about the Death, such as: Condition
      in an administrative claim, status of enrollment into a health plan, or explicit record in EHR data.'
    tests:
      - person_completeness:
          threshold: '100'
    columns:
      - name: person_id
        description: ''
        data_type: integer
        tests:
          - not_null
          - relationships:
              to: ref('person')
              field: person_id
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list: "{{ get_type_variants(['bigint', 'integer']) }}"
      - name: death_date
        description: The date the person was deceased.
        data_type: date
        tests:
          - not_null
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list: "{{ get_equivalent_types('date') }}"
      - name: death_datetime
        description: ''
        data_type: datetime
        tests:
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list: "{{ get_equivalent_types('timestamp') }}"
      - name: death_type_concept_id
        description: This is the provenance of the death record, i.e., where it came from. It is possible
          that an administrative claims database would source death information from a government file
          so do not assume the Death Type is the same as the Visit Type, etc.
        data_type: integer
        tests:
          - dbt_utils.relationships_where:
              to: ref('concept')
              field: concept_id
              from_condition: death_type_concept_id <> 0
              to_condition: domain_id = 'Type Concept'
          - concept_record_completeness:
              threshold: '0'
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list: "{{ get_type_variants(['bigint', 'integer']) }}"
          - dbt_utils.relationships_where:
              to: ref('concept')
              field: concept_id
              from_condition: death_type_concept_id != 0
              to_condition: standard_concept = 'S' AND invalid_reason IS NULL
      - name: cause_concept_id
        description: This is the Standard Concept representing the Person's cause of death, if available.
        data_type: integer
        tests:
          - relationships:
              to: ref('concept')
              field: concept_id
          - concept_record_completeness:
              threshold: '5'
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list: "{{ get_type_variants(['bigint', 'integer']) }}"
          - dbt_utils.relationships_where:
              to: ref('concept')
              field: concept_id
              from_condition: cause_concept_id != 0
              to_condition: standard_concept = 'S' AND invalid_reason IS NULL
      - name: cause_source_value
        description: ''
        data_type: varchar(50)
        tests:
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list: "{{ get_equivalent_types('varchar') }}"
      - name: cause_source_concept_id
        description: ''
        data_type: integer
        tests:
          - relationships:
              to: ref('concept')
              field: concept_id
          - concept_record_completeness:
              threshold: '10'
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list: "{{ get_type_variants(['bigint', 'integer']) }}"
