models:
  - name: provider
    description: The PROVIDER table contains a list of uniquely identified healthcare providers; duplication
      is not allowed. These are individuals providing hands-on healthcare to patients, such as physicians,
      nurses, midwives, physical therapists etc.
    columns:
      - name: provider_id
        description: It is assumed that every provider with a different unique identifier is in fact a
          different person and should be treated independently.
        data_type: integer
        tests:
          - not_null
          - unique
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list: "{{ get_type_variants(['bigint', 'integer']) }}"
      - name: provider_name
        description: This field contains information that describes a healthcare provider.
        data_type: varchar(255)
        tests:
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list: "{{ get_equivalent_types('varchar') }}"
      - name: npi
        description: This is the National Provider Number issued to health care providers in the US by
          the Centers for Medicare and Medicaid Services (CMS).
        data_type: varchar(20)
        tests:
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list: "{{ get_equivalent_types('varchar') }}"
      - name: dea
        description: This is the identifier issued by the DEA, a US federal agency, that allows a provider
          to write prescriptions for controlled substances.
        data_type: varchar(20)
        tests:
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list: "{{ get_equivalent_types('varchar') }}"
      - name: specialty_concept_id
        description: This field either represents the most common specialty that occurs in the data or
          the most specific concept that represents all specialties listed, should the provider have more
          than one. This includes physician specialties such as internal medicine, emergency medicine,
          etc. and allied health professionals such as nurses, midwives, and pharmacists.
        data_type: integer
        tests:
          - relationships:
              to: ref('concept')
              field: concept_id
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list: "{{ get_type_variants(['bigint', 'integer']) }}"
          - dbt_utils.relationships_where:
              to: ref('concept')
              field: concept_id
              from_condition: specialty_concept_id != 0
              to_condition: standard_concept = 'S' AND invalid_reason IS NULL
      - name: care_site_id
        description: This is the CARE_SITE_ID for the location that the provider primarily practices in.
        data_type: integer
        tests:
          - relationships:
              to: ref('care_site')
              field: care_site_id
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list: "{{ get_type_variants(['bigint', 'integer']) }}"
      - name: year_of_birth
        description: ''
        data_type: integer
        tests:
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list: "{{ get_type_variants(['bigint', 'integer']) }}"
      - name: gender_concept_id
        description: This field represents the recorded gender of the provider in the source data.
        data_type: integer
        tests:
          - dbt_utils.relationships_where:
              to: ref('concept')
              field: concept_id
              from_condition: gender_concept_id <> 0
              to_condition: domain_id = 'Gender'
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list: "{{ get_type_variants(['bigint', 'integer']) }}"
          - dbt_utils.relationships_where:
              to: ref('concept')
              field: concept_id
              from_condition: gender_concept_id != 0
              to_condition: standard_concept = 'S' AND invalid_reason IS NULL
      - name: provider_source_value
        description: Use this field to link back to providers in the source data. This is typically used
          for error checking of ETL logic.
        data_type: varchar(50)
        tests:
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list: "{{ get_equivalent_types('varchar') }}"
      - name: specialty_source_value
        description: This refers to the specific type of healthcare provider or field of expertise listed
          in the source data, encompassing physician specialties like internal medicine, emergency medicine,
          etc., as well as allied health professionals such as nurses, midwives, and pharmacists. It covers
          medical specialties like surgery, internal medicine, and radiology, while other services like
          prosthetics, acupuncture, and physical therapy fall under the domain of "Service."
        data_type: varchar(50)
        tests:
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list: "{{ get_equivalent_types('varchar') }}"
      - name: specialty_source_concept_id
        description: This is often zero as many sites use proprietary codes to store physician speciality.
        data_type: integer
        tests:
          - relationships:
              to: ref('concept')
              field: concept_id
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list: "{{ get_type_variants(['bigint', 'integer']) }}"
      - name: gender_source_value
        description: This is provider's gender as it appears in the source data.
        data_type: varchar(50)
        tests:
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list: "{{ get_equivalent_types('varchar') }}"
      - name: gender_source_concept_id
        description: This is often zero as many sites use proprietary codes to store provider gender.
        data_type: integer
        tests:
          - relationships:
              to: ref('concept')
              field: concept_id
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list: "{{ get_type_variants(['bigint', 'integer']) }}"
